plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "com.matthewprenger.cursegradle"
    id "com.modrinth.minotaur"
}

architectury {
    platformSetupLoomIde()
    forge()
}

version = rootProject.mod_version + "-forge-" + rootProject.minecraft_version

loom {
    forge {
        mixinConfig "axesareweapons.mixins.json"
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    modApi "me.shedaniel.cloth:cloth-config-forge:${project.cloth_config_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.mod_version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

modrinth {
    var MODRINTH_TOKEN = System.getenv("MODRINTH_TOKEN")
    if (MODRINTH_TOKEN != null) {
        token = MODRINTH_TOKEN
        projectId = rootProject.modrinth_id
        versionName = "${project.mod_version}-forge-1.19"
        versionNumber = project.version
        versionType = "release"
        uploadFile = remapJar
        changelog = changelog()
        gameVersions = Arrays.stream(rootProject.forge_game_versions.split(',')).map(s -> s.trim()).toList()
        loaders = ["forge"]
        dependencies {
            Arrays.stream(rootProject.modrinth_dependencies.split(',')).forEach(s -> required.project(s))
        }
    }
}

curseforge {
    var CURSEFORGE_TOKEN = System.getenv("CURSEFORGE_TOKEN")
    if (CURSEFORGE_TOKEN != null) {
        apiKey = CURSEFORGE_TOKEN
        project {
            id = rootProject.curseforge_id
            releaseType = "release"
            changelogType = "markdown"
            changelog = changelog()

            addGameVersion "Forge"
            Arrays.stream(rootProject.forge_game_versions.split(','))
                .map(s -> s.trim())
                .forEach(s -> addGameVersion(s))

            relations {
                Arrays.stream(rootProject.curseforge_dependencies.split(','))
                    .forEach(s -> requiredDependency(s))
            }
            mainArtifact(remapJar.archivePath) {
                displayName = "AxesAreWeapons-${project.mod_version}-forge-1.19"
            }
            afterEvaluate {
                uploadTask.dependsOn("build")
            }
        }
        options {
            forgeGradleIntegration = false
            javaVersionAutoDetect = false
        }
    }
}
